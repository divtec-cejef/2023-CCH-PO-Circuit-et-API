generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model avatar {
  id_avatar Int     @id @default(autoincrement())
  image     String? @db.VarChar(100)
  car       car[]
}

model section {
  id_section Int        @id @default(autoincrement())
  label      String?    @db.VarChar(50)
  password   String?    @db.VarChar(64)
  activity   activity[]
}

model activity {
  id_activity Int       @id @default(autoincrement())
  label       String?   @db.VarChar(50)
  id_section  Int
  section     section   @relation(fields: [id_section], references: [id_section], onDelete: NoAction, onUpdate: NoAction)
  realise     realise[]
}

model car {
  id_car    Int       @id @default(autoincrement())
  password  String?   @db.VarChar(50)
  query_id  String?   @unique @db.VarChar(100)
  pseudo    String?   @db.VarChar(50)
  id_avatar Int
  avatar    avatar    @relation(fields: [id_avatar], references: [id_avatar], onDelete: NoAction, onUpdate: NoAction)
  race      race[]
  realise   realise[]
}

model realise {
  id_car      Int       @default(autoincrement())
  id_activity Int
  date_time   DateTime? @db.Timestamp(6)
  activity    activity  @relation(fields: [id_activity], references: [id_activity], onDelete: NoAction, onUpdate: NoAction)
  car         car       @relation(fields: [id_car], references: [id_car], onDelete: Cascade, onUpdate: NoAction)

  @@id([id_car, id_activity])
}

model race {
  id_race     Int      @id @default(autoincrement())
  race_start  DateTime
  race_finish DateTime
  id_car      Int
  car         car      @relation(fields: [id_car], references: [id_car], onDelete: Cascade, onUpdate: NoAction)
}
